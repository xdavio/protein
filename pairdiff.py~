import numpy as np
from itertools import starmap, combinations

def pairdiff(mat):
    def vectorOperator(vec):
        """takes a vector and outer products it efficiently"""
        def foo(a,b):
            return(np.absolute(a-b, dtype = np.float))

        out = np.array(list(starmap(foo,combinations(vec,2))), dtype = np.float)
        out = out[~np.isnan(out)]
        n = len(out)
        return(np.sum(out,dtype=float)/n)

    return(np.apply_along_axis(vectorOperator, 0, mat))
    

if __name__ == "__main__":
    import random
    random.seed(1)
    
    mat = np.random.rand(3,5)
    pass
